"""add deadline to quest_assignments

Revision ID: e2fdbafef446
Revises: 8da28d484825
Create Date: 2025-05-21 17:12:36.568624

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e2fdbafef446'
down_revision: Union[str, None] = '8da28d484825'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_tasks_id', table_name='tasks')
    op.drop_table('tasks')
    op.drop_table('evaluations')
    op.add_column('quest_assignments', sa.Column('deadline', sa.DateTime(), nullable=True))
    op.alter_column('quest_progress', 'assignment_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('quest_progress', 'step_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_index(op.f('ix_quest_progress_assignment_id'), 'quest_progress', ['assignment_id'], unique=False)
    op.create_index(op.f('ix_quest_progress_step_id'), 'quest_progress', ['step_id'], unique=False)
    op.create_foreign_key(None, 'quest_progress', 'quest_steps', ['step_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'quest_progress', type_='foreignkey')
    op.drop_index(op.f('ix_quest_progress_step_id'), table_name='quest_progress')
    op.drop_index(op.f('ix_quest_progress_assignment_id'), table_name='quest_progress')
    op.alter_column('quest_progress', 'step_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('quest_progress', 'assignment_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('quest_assignments', 'deadline')
    op.create_table('evaluations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('evaluator_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('comments', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['users.id'], name='evaluations_employee_id_fkey'),
    sa.ForeignKeyConstraint(['evaluator_id'], ['users.id'], name='evaluations_evaluator_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='evaluations_pkey')
    )
    op.create_table('tasks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('assigned_to_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('assigned_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('due_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['assigned_by_id'], ['users.id'], name='tasks_assigned_by_id_fkey'),
    sa.ForeignKeyConstraint(['assigned_to_id'], ['users.id'], name='tasks_assigned_to_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tasks_pkey')
    )
    op.create_index('ix_tasks_id', 'tasks', ['id'], unique=False)
    # ### end Alembic commands ###
